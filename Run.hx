package;

class Run {
    static function main() {
        function show() {
            var ver:String = "";
            if (sys.FileSystem.exists("sick-ascii-art.txt")) {
                Sys.println(sys.io.File.getContent("sick-ascii-art.txt"));
            } else {
                Sys.println("hxdiscord! (missing ascii art)\n");
            }
            if (sys.FileSystem.exists("version.txt")) {
                ver = sys.io.File.getContent("version.txt");
            } else {
                ver = "version.txt not found!";
            }
            Sys.println("One of the few Discord libraries for Haxe!");
            Sys.println("- hxdiscord version: " + ver);
        }
        switch(Sys.args()[0]) {
            case "create":
                show();
                Sys.println("\nCreating a new hxdiscord project...");
                trace(Sys.programPath());
                sys.io.File.saveContent(Sys.programPath() + "Main.hx", "/**
    This project has been generated by hxdiscord. This code was taken from the original GitHub repository.
    You can remove this comment since it's not necessary.
**/

import hxdiscord.DiscordClient;
import hxdiscord.utils.Intents;
import hxdiscord.types.*;
class Main
{
    static var Bot:DiscordClient;
    static function main()
    {
        Bot = new DiscordClient(\"your token here\", [Intents.ALL], false);
        Bot.onReady = onReady;
        Bot.onMessageCreate = onMessageCreate;
    }

    public static function onReady()
    {
        trace(\"The bot is ready\");
    }

    public static function onMessageCreate(m:Message)
    {
        if (m.content == \"hi\")
        {
            m.reply({content:\"Hello!\"}, true); //true or false, the bot will mention the user
        }
    }
}
                ");
                Sys.println("A new Main.hx file has been created for you");
            case "help":
                show();
                Sys.println("\n> create - Creates a new hxdiscord project inside the directory you're currently in");
                Sys.println("> help - Displays this help menu");
            default:
                show();
                Sys.println("\n\n");
                Sys.println(Sys.args()[0] + " is not a valid argument!");
        }
    }
}